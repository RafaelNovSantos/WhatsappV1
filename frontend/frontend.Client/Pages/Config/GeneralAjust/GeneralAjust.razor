<MudContainer  MaxWidth="MaxWidth.False"   Style="overflow: auto">
    <MudText Class="mt-4" Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Ajustes Gerais</MudText>
    <MudText Class="mb-6" Align="Align.Center">Os principais ajustes da plataforma estão aqui. Mensagens de boas-vindas/finalização, regras de utilização, horário de atendimento e mais.</MudText>
    <div>
        <MudCard Elevation="4" Class="mb-6 rounded-xl pa-1">

            <!-- Reiniciar Instância -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Reiniciar Instância</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Reinicie sua instância para corrigir erros automaticamente. Será necessário escanear um novo QR Code para o WhatsApp.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudToggleIconButton @bind-Toggled="RestartOn"
                                     Icon="@Icons.Material.Filled.RestartAlt"
                                     Color="@Color.Error"
                                     ToggledIcon="@Icons.Material.Filled.Check"
                                     ToggledColor="@Color.Success"
                                     title="@(RestartOn ? "On" : "Off")" />

                <span>Instância @(RestartOn ? "reiniciada" : "não está reiniciada")</span>
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Nome da Instância -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Nome da Instância</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Defina ou altere o nome da instância exibido nos registros e relatórios.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudTextField FullWidth="true" Margin="Margin.Dense" @bind-Value="NameInstance" Label="Nome da instância" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.DriveFileRenameOutline" AdornmentColor="Color.Primary" />
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Logotipo -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Logotipo</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Personalize o logotipo que será exibido nos seus atendimentos e notificações.</MudText>
            </MudCardContent>
            @if (string.IsNullOrEmpty(_imageUrl))
            {
            <MudCardActions  Style="    width: max-content;">
                <MudFileUpload T="IBrowserFile" Accept=".svg" MaximumFileCount="1" FilesChanged="UploadFile">
                    <ActivatorContent>
                        <MudButton T="string" Variant="Variant.Outlined"  StartIcon="@Icons.Material.Filled.Camera" Color="Color.Primary">Escolher logo</MudButton>
                    </ActivatorContent>
                </MudFileUpload>
            </MudCardActions>
            }
            @if (!string.IsNullOrEmpty(_imageUrl))
            {
                <div class="d-flex">
                <MudPaper Style="margin: 16px;
    width: max-content;
    background: #1ec8a5;" Class="d-flex align-center">
               
                    <MudCard  Class="py-1 align-center  justify-start " Elevation="0" Style="width: 40px; height: 100%; color: white; background: #1ec8a5" T="string">


                        <MudImage Style="margin-bottom: 3px;" Width="25" Height="25" Fluid="true" Src="@_imageUrl" Alt="Uploaded Image" Class="rounded-lg mt-2" />
                        <MudIcon Icon="@Icons.Material.Filled.Chat" Title="Chat" />
                        <MudSpacer></MudSpacer>

                       <div class="justify-center" style="color: white; display: grid;">
                            <MudDivider></MudDivider>
                            <MudIcon Class="mb-1" Icon="@Icons.Material.Filled.Notifications" Title="Favorite"/>
              
                            <MudIcon Class="mb-1" Icon="@Icons.Material.Filled.Settings" Title="Favorite" />
              
                            <MudIcon Class="mb-1" Icon="@Icons.Material.Filled.SupervisedUserCircle" Title="Favorite" />
                       </div>
                  
                    </MudCard>
                    <MudCard Class="px-1" Style="    display: -webkit-inline-box;" Elevation="0">
                        <MudCardContent Class="pa-1">
                            <MudSkeleton Animation="Animation.Wave" Width="44px" Class="my-1" Height="20px"  />
                            <MudSkeleton Animation="Animation.Wave" Width="44px" Class="my-1" Height="124px"  />
                        </MudCardContent>
                        <MudCardContent Class="pa-1">
                            <MudSkeleton Animation="Animation.Wave" Width="155px" Class="my-1" Height="20px"  />
                            <MudSkeleton Animation="Animation.Wave" Width="155px" Class="my-1" Height="100px"  />
                            <MudSkeleton Animation="Animation.Wave"  Width="155px" Class="my-1" Height="20px"  />
                        </MudCardContent>

                    </MudCard>
   
                </MudPaper>
                <MudMenu Style="width: max-content; margin: 5px;" FullWidth="false" ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                    <ActivatorContent>
                        <MudChip T="string"  Icon="@Icons.Material.Filled.MoreVert" Color="Color.Primary">Configurar Logo</MudChip>
                    </ActivatorContent>
                    <ChildContent>
                        <MudFileUpload T="IBrowserFile" Accept=".svg" MaximumFileCount="1" FilesChanged="UploadFile">
                            <ActivatorContent>
                                <MudButton

                                    Target="_blank"
                                    Variant="Variant.Text"
                                    IconColor="Color.Info"
                                    StartIcon="@Icons.Material.Outlined.ChangeCircle"
                                    Color="Color.Secondary"
                                    Style="text-transform:none; width: 100%">
                                    Mudar logo
                                </MudButton>
                            </ActivatorContent>
                        </MudFileUpload>
                        <MudButton

                            Target="_blank"
                            Variant="Variant.Text"
                            IconColor="Color.Error"
                            StartIcon="@Icons.Material.Outlined.DeleteForever"
                            Color="Color.Secondary"
                            Style="text-transform:none; width: 100%"
                            OnClick="ExcludLogo">
                            Excluir Logo
                        </MudButton>
                    </ChildContent>
                    </MudMenu>
                </div>
                        }
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Mensagem de Boas-Vindas -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Mensagem de Boas-Vindas</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Configure a mensagem inicial enviada automaticamente para novos atendimentos.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudTextField AutoGrow MaxLines="10" Margin="Margin.Dense" @bind-Value="WelcomeMessage" Label="Mensagem de Boas-Vindas" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.DriveFileRenameOutline" AdornmentColor="Color.Primary" />

            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Mensagem de Finalização -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Mensagem de Finalização</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Defina a mensagem enviada automaticamente ao encerrar um atendimento.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudTextField AutoGrow MaxLines="10" Margin="Margin.Dense" @bind-Value="FinishMessage" Label="Mensagem de Finalização" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.DriveFileRenameOutline" AdornmentColor="Color.Primary" />
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Avaliação de Atendimento -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Avaliação de Atendimento</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Ative ou desative a solicitação de feedback ao final de um atendimento.</MudText>
            </MudCardContent>
            <MudCardActions>
                  
              
                <label class="switch">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_rating)))" checked="@_rating" />
                    <span class="slider"></span>
                </label>

            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Usuário Padrão -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Usuário Padrão</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Configure o usuário padrão para carteirização dos atendimentos.</MudText>
            </MudCardContent>
            <MudCardActions>
                <label class="switch">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_userdefault)))" checked="@_userdefault"/>
                    <span class="slider"></span>
                </label>
                </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            
            <!-- Identificar nome do usuário -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Identificar nome do usuário</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Inclui o nome do usuário nas mensagens enviadas.</MudText>
            </MudCardContent>
            <MudCardActions>
                <label class="switch">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_identifynameuser)))" checked="@_identifynameuser"/>
                    <span class="slider"></span>
                </label>
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Ocultar números de telefone -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Ocultar números de telefone</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Oculta os 4 últimos dígitos do telefone (privacidade).</MudText>
            </MudCardContent>
            <MudCardActions>
                <label class="switch">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_hidefournumber)))" checked="@_hidefournumber"/>
                    <span class="slider"></span>
                </label>
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Ocultar conversas iniciadas via disparos -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Ocultar conversas iniciadas via disparos</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Não exibe as conversas sem interação que foram iniciadas através da opção de Disparos.</MudText>
            </MudCardContent>
            <MudCardActions>
                <label class="switch">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_hidemessageshottings)))" checked="@_hidemessageshottings"/>
                    <span class="slider"></span>
                </label>
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Finalizar atendimento por inatividade -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Finalizar atendimento por inatividade</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Caso o usuário ou cliente não enviem uma mensagem por determinado período, o atendimento será finalizado automaticamente.</MudText>
            </MudCardContent>
            <div class="card-edit-switch">
                <label class="switch ma-2">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_finishservicecustomer)))" checked="@_finishservicecustomer"/>
                    <span class="slider"></span>
                </label>

              <MudText Class="ma-2" > Cliente</MudText>
                <input class="modern-number-input" type="number" value="0">
                <MudText Class="ma-2"> Minutos</MudText>
            </div>
            <div class="card-edit-switch">
                <label class="switch ma-2">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_finishserviceattendant)))" checked="@_finishserviceattendant"/>
                    <span class="slider"></span>
                </label>
                <MudText Class="ma-2" > Atendente</MudText>

                <input class="modern-number-input" type="number" value="0">
                <MudText Class="ma-2"> Minutos</MudText>
            </div>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Horário de Atendimento -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Horário de Atendimento</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Defina os horários em que os atendimentos estão disponíveis.</MudText>
            </MudCardContent>
            <MudCardActions Class="card-edit-switch">
                
                <label class="switch">
                    <input type="checkbox" onclick="@(() => ToggleBoolean(nameof(_timeservice)))" checked="@_timeservice"/>
                    <span class="slider"></span>
                </label>
                @if (_timeservice)
                {
                    <MudButton Class="ma-2" @onclick="OpenDialogAsync" Variant="Variant.Filled" Color="Color.Primary">
                        Configurar Horários
                    </MudButton>
                }
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Fuso Horário -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Fuso Horário</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Ajuste o fuso horário padrão para os seus atendimentos.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudSelect Style="width: 100%"   T="string"
                           Variant="Variant.Outlined"
                           Margin="Margin.Dense"
                           Dense="true"
                           Label="Horário Padrão"


                           Clearable="true">
                    @foreach (var _hourDefault in _hoursDefault)
                    {
                        <MudSelectItem Style="width: 100%" Value="_hourDefault">@_hourDefault</MudSelectItem>
                    }
                </MudSelect>
            </MudCardActions>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Código do País -->
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Código do País</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Configure o código do país para chamadas e WhatsApp.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudSelect Style="width: 100%"   T="string"
                           Variant="Variant.Outlined"
                           Margin="Margin.Dense"
                           Dense="true"
                           Label="Código padrão"


                           Clearable="true">
                    @foreach (var _codDefault in _codsDefault)
                    {
                        <MudSelectItem Style="width: 100%" Value="_codDefault">@_codDefault</MudSelectItem>
                    }
                </MudSelect>
            </MudCardActions>
            
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <!-- Salvar Configurações -->
            <div class="d-flex align-center card-edit-switch" style="padding: 16px;
    justify-content: space-between;">
                <MudText Class="ma-2" Typo="Typo.h5">Salvar configurações</MudText>
                <button class="bookmarkBtn ma-2" style="    border: 1px solid rgb(0 0 0);">
                <span class="IconContainer">
                    <MudIcon Color="Color.Primary" Icon="@Icons.Material.Outlined.Save"></MudIcon>
                </span>
                    <p class="text">Salvar</p>
                </button>
            </div>
            <MudCardActions>
            
            </MudCardActions>
        </MudCard>
    </div>
</MudContainer>


<style>
    .mud-input{
        width: 100%;
       
    }
    .mud-input > input.mud-input-root, div.mud-input-slot.mud-input-root{
        text-align: inherit !important;
    }
</style>



@code {
    public bool RestartOn { get; set; }
    public string NameInstance { get; set; } = "Plataforma de atendimento";
    public string WelcomeMessage { get; set; } = "Seja Bem-Vindo";
    public string FinishMessage { get; set; } = "Até logo!";
    public int TimefinishClient { get; set; } = 0;
    bool _rating = true;
    bool _userdefault = true;
    bool _identifynameuser = true;
    bool _hidefournumber = true;
    bool _hidemessageshottings = true;
    bool _finishserviceattendant = true;
    bool _timeservice = true;
    bool _finishservicecustomer = true;

    
    
    
    IBrowserFile _file; // Variável para armazenar apenas 1 arquivo
    string _imageUrl; // Variável para armazenar a URL da imagem
    
    private List<DayClass> days = new List<DayClass>();

    protected override async Task OnInitializedAsync()
    {
        // Exemplo de inicialização
        days = new List<DayClass>
        {
            new DayClass { Id = 1, DayWeek = "Olá, seja bem vindo" },
            new DayClass { Id = 2, DayWeek = "Como posso te ajudar?" },
        };
    }
    
    public string[] _hoursDefault = 
    {
        "Brasilia Time (BRT) GMT-3", 
        "Eastern Standard Time (EST) GMT-5", 
        "Central European Time (CET) GMT+1", 
        "Pacific Standard Time (PST) GMT-8", 
        "Greenwich Mean Time (GMT) GMT+0", 
        "Indian Standard Time (IST) GMT+5:30", 
        "Australian Eastern Standard Time (AEST) GMT+10", 
        "Japan Standard Time (JST) GMT+9"
    };

    public string[] _codsDefault = 
    {
        "Brazil +55", 
        "United States +1", 
        "Germany +49", 
        "United States +1", 
        "United Kingdom +44", 
        "India +91", 
        "Australia +61", 
        "Japan +81"
    };
    
    // Função global para alternar o valor booleano
    private void ToggleBoolean(string propertyName)
    {
        var property = GetType().GetField(propertyName, System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);
        if (property != null && property.FieldType == typeof(bool))
        {
            bool currentValue = (bool)property.GetValue(this);
            property.SetValue(this, !currentValue);
            StateHasChanged(); // Atualiza a interface
        }
    }

    
    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<DialogTimeService>("Simple Dialog", options);
    }

    private async Task UploadFile(IBrowserFile file)
    {
        _file = file; // Substitui o arquivo atual

        // Converta o arquivo para uma string base64
        var buffer = new byte[file.Size];
        await file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 5).ReadAsync(buffer); // Tamanho máximo de 5MB
        var base64String = Convert.ToBase64String(buffer);

        // Gere a URL da imagem
        _imageUrl = $"data:{file.ContentType};base64,{base64String}";
    }

    private void ExcludLogo()
    {
        _imageUrl = string.Empty;
        return;
    }
}