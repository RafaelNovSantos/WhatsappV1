@inject IJSRuntime JsRuntime

<div Width="100%" Style="    background: #e6e6e6;">
    <!-- Barra de título do chat -->
    <MudToolBar Dense="true" Class="px-4">
        <MudIconButton Class="activeIconOpenContacts" OnClick="@ToggleVisibility" Icon="@Icons.Material.Filled.ArrowBack" aria-label="Voltar" />
        @if (string.IsNullOrEmpty(ContactId))
        {
            <MudIcon Class="ma-2" Icon="@Icons.Material.Outlined.Person" Color="Color.Primary"></MudIcon>
            <MudHidden Breakpoint="Breakpoint.MdAndDown">
                <MudText Typo="Typo.h6">Chat</MudText>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.LgAndUp">
                <p style="font-weight: bold" Class="ma-2 mud-typography  ma-3">Chat</p>

            </MudHidden>
        }
        else
        {

            <MudAvatar Class="ma-2">
                @ContactEmail.ToUpper().FirstOrDefault()
            </MudAvatar>
 
                <MudText Typo="Typo.h6" Class="hide-text-1240">@ContactEmail</MudText>

                <p style="font-weight: bold" Class="ma-2 mud-typography hide-text-1240Down ma-3">@ContactEmail</p>

   
        }
        <MudSpacer/>
        <div Class="dimensionIcon">
            <MudMenu AnchorOrigin="@AnchorOrigin" TransformOrigin="@TransformOrigin" ActivationEvent="@MouseEvent.MouseOver" Class="ma-2">
                <ActivatorContent>
                    <MudIcon Class="activeIconMenu" Icon="@Icons.Material.Filled.PublishedWithChanges">
                    </MudIcon>
                    <MudButton


                        Variant="Variant.Outlined"
                        EndIcon="@Icons.Material.Filled.PublishedWithChanges"
                        Color="Color.Tertiary"
                        Class="hide-text-sm">
                        <span class="hide-text-sm">Transferir</span>
                    </MudButton>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Profile</MudMenuItem>
                    <MudMenuItem>Theme</MudMenuItem>
                    <MudMenuItem>Usage</MudMenuItem>
                    <MudMenuItem>Sign Out</MudMenuItem>
                </ChildContent>
            </MudMenu>

            <MudMenu AnchorOrigin="@AnchorOrigin" TransformOrigin="@TransformOrigin" ActivationEvent="@MouseEvent.MouseOver" Class="ma-2">
                <ActivatorContent>
                    <MudIcon Class="activeIconMenu" Icon="@Icons.Material.Outlined.Label">
                    </MudIcon>
                    <MudButton


                        Variant="Variant.Outlined"
                        EndIcon="@Icons.Material.Outlined.Label"
                        Color="Color.Tertiary"
                        Class="hide-text-sm">
                        <span class="hide-text-sm">Etiquetas</span>
                    </MudButton>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Profile</MudMenuItem>
                    <MudMenuItem>Theme</MudMenuItem>
                    <MudMenuItem>Usage</MudMenuItem>
                    <MudMenuItem>Sign Out</MudMenuItem>
                </ChildContent>
            </MudMenu>

            <MudMenu AnchorOrigin="@AnchorOrigin" TransformOrigin="@TransformOrigin" ActivationEvent="@MouseEvent.MouseOver" Class="ma-2">
                <ActivatorContent>
                    <MudIcon Class="activeIconMenu" Icon="@Icons.Material.Outlined.CalendarMonth">
                    </MudIcon>
                    <MudButton


                        Variant="Variant.Outlined"
                        EndIcon="@Icons.Material.Outlined.CalendarMonth"
                        Color="Color.Tertiary"
                        Class="hide-text-sm">
                        <span class="hide-text-sm">Agendar</span>
                    </MudButton>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Profile</MudMenuItem>
                    <MudMenuItem>Theme</MudMenuItem>
                    <MudMenuItem>Usage</MudMenuItem>
                    <MudMenuItem>Sign Out</MudMenuItem>
                </ChildContent>
            </MudMenu>

            <MudMenu AnchorOrigin="@AnchorOrigin" TransformOrigin="@TransformOrigin" ActivationEvent="@MouseEvent.MouseOver" Class="ma-2">
                <ActivatorContent>
                    <MudIcon Class="activeIconMenu" Icon="@Icons.Material.Outlined.Check">
                    </MudIcon>
                    <MudButton


                        Variant="Variant.Outlined"
                        EndIcon="@Icons.Material.Outlined.Check"
                        Color="Color.Tertiary"
                        Class="hide-text-sm">
                        <span class="hide-text-sm">Finalizar</span>
                    </MudButton>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Profile</MudMenuItem>
                    <MudMenuItem>Theme</MudMenuItem>
                    <MudMenuItem>Usage</MudMenuItem>
                    <MudMenuItem>Sign Out</MudMenuItem>
                </ChildContent>
            </MudMenu>



            <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="@AnchorOriginMenu" TransformOrigin="@TransformOriginMenu" Dense="true" Icon="@Icons.Material.Filled.MoreVert">
                <MudMenuItem IconSize="Size.Small" IconColor="Color.Dark" Icon="@Icons.Material.Outlined.Archive">Arquivar Chat</MudMenuItem>
                <MudMenuItem IconSize="Size.Small" IconColor="Color.Success" Icon="@Icons.Material.Outlined.NotificationsOff">Silenciar Chat</MudMenuItem>
                <MudMenuItem IconSize="Size.Small" IconColor="Color.Error" Icon="@Icons.Material.Filled.Block">Bloquear</MudMenuItem>
            </MudMenu>
        </div>
    </MudToolBar>
</div>

@code {
    [Parameter] public string ContactId { get; set; }
    [Parameter] public string ContactEmail { get; set; }
    
    private bool _buttonHide = false;
    
    [Parameter]
    public EventCallback<bool> ContactHideChanged { get; set; }

    private void ToggleVisibility()
    {
        _buttonHide = !_buttonHide;
        ContactHideChanged.InvokeAsync(_buttonHide); // Notifica o componente pai
        _buttonHide = false;
        
    }

    private Origin TransformOrigin { get; set; } = Origin.TopCenter;
    private Origin TransformOriginMenu { get; set; } = Origin.BottomLeft;
    private Origin AnchorOrigin { get; set; } = Origin.BottomCenter;
    private Origin AnchorOriginMenu { get; set; } = Origin.BottomRight;
}